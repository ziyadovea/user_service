version: "3.9"
services:
  nginx:
    build: ../nginx
    container_name: nginx
    ports:
      - "80:80"
    depends_on:
      - user_service
      - user_service_repl1

  user_service:
    build: ../
    command: ["./myapp", "-config", "/app/configs/dev.yaml"]
    container_name: user_service
    volumes:
      - ../configs:/app/configs
    ports:
      - "8082:8082"
      - "50051:50051"
    depends_on:
      - postgres
    environment:
      ACCESS_TOKEN_SECRET: "${ACCESS_TOKEN_SECRET}"
      REFRESH_TOKEN_SECRET: "${REFRESH_TOKEN_SECRET}"
      DB_URL: "${DB_URL}"

  user_service_repl1:
    build: ../
    command: ["./myapp", "-config", "/app/configs/dev.yaml"]
    container_name: user_service_repl1
    volumes:
      - ../configs:/app/configs
    ports:
      - "8083:8083"
      - "50052:50052"
    depends_on:
      - postgres
    environment:
      ACCESS_TOKEN_SECRET: "${ACCESS_TOKEN_SECRET}"
      REFRESH_TOKEN_SECRET: "${REFRESH_TOKEN_SECRET}"
      DB_URL: "${DB_URL}"

  postgres:
    image: postgres:14-alpine3.17
    container_name: postgres
    environment:
      POSTGRES_DB: "${POSTGRES_DB}"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - .:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yaml'
    ports:
      - "9090:9090"
    restart: unless-stopped
    volumes:
      - ../prometheus:/etc/prometheus
      - prom_data:/prometheus

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./grafana:/etc/grafana/provisioning/datasources

volumes:
  prom_data:
